<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on ziwon.github.io</title>
    <link>https://ziwon.github.io/tags/docker/</link>
    <description>Recent content in Docker on ziwon.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://github.com/ziwon&#34;&gt;Yeongpil Yoon&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 24 Feb 2019 16:59:00 +0900</lastBuildDate>
    
	<atom:link href="https://ziwon.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[번역] 도커 볼륨</title>
      <link>https://ziwon.github.io/post/docker-storage-volumes/</link>
      <pubDate>Sun, 24 Feb 2019 16:59:00 +0900</pubDate>
      
      <guid>https://ziwon.github.io/post/docker-storage-volumes/</guid>
      <description>도커 스토리지 목차는 다음과 같다.
 스토리지 소개 (원문) * 볼륨 사용 (원문) 바인드 마운트 tmp 마운트 컨테이너에 데이터 저장하기  스토리지 드라이버에 대해 스토리지 드라이버 선택 AUFS 스토리지 드라이버 사용 Btrfs 스토리지 드라이버 사용 디바이스 맵퍼 스토리지 드라이버 사용 OverlayFS 스토리지 드라이버 사용 ZFS 스토리지 드라이버 사용 VFS 스토리지 드라이버 사용    볼륨 사용 볼륨은 도커 컨테이너에 의해 생성되고 사용되는 데이터를 영속하기 위해 선호되는 메커니즘이다. 바인드 마운트는 호스트 머신의 디렉토리 구조에 따라 달라지지만, 볼륨은 도커에 의해 완전히 관리된다.</description>
    </item>
    
    <item>
      <title>[번역] 도커 스토리지 소개</title>
      <link>https://ziwon.github.io/post/docker-storage-overview/</link>
      <pubDate>Wed, 20 Feb 2019 11:55:00 +0900</pubDate>
      
      <guid>https://ziwon.github.io/post/docker-storage-overview/</guid>
      <description>도커상에서 어플리케이션 데이터관리는 중요한 주제이므로 도커 공식 문서를 하나씩 번역해가며 그 내용을 자세히 살펴보고자 한다.
 도커 스토리지 전체 목차는 다음과 같다.
 * 스토리지 소개 (원문) 볼륨 사용 (원문) 바인드 마운트 tmp 마운트 컨테이너에 데이터 저장하기  스토리지 드라이버에 대해 스토리지 드라이버 선택 AUFS 스토리지 드라이버 사용 Btrfs 스토리지 드라이버 사용 디바이스 맵퍼 스토리지 드라이버 사용 OverlayFS 스토리지 드라이버 사용 ZFS 스토리지 드라이버 사용 VFS 스토리지 드라이버 사용    도커에서 데이터 관리 기본적으로 컨테이너 내부에서 생성된 모든 파일은 쓰기 가능한 컨테이너 레이어에 저장된다.</description>
    </item>
    
    <item>
      <title>[번역] 확장성 있고, 이식성 있는 도커 컨테이너 네트워크 설계</title>
      <link>https://ziwon.github.io/post/designing-scalable-portable-docker-container-networks/</link>
      <pubDate>Wed, 16 Jan 2019 08:23:00 +0900</pubDate>
      
      <guid>https://ziwon.github.io/post/designing-scalable-portable-docker-container-networks/</guid>
      <description>원문: Docker Reference Architecture: Designing Scalable, Portable Docker Container Networks (오역 및 오타는 댓글로 알려주세요)
  ※ 컨테이너가 아닌 Pod간의 Kubernetes 네트워킹 모델은 도커 네트워킹 모델과 좀 다릅니다. 자세한 내용은 하단의 기타 아티클을 참조하세요.
  배우게 될 것 도커 컨테이너는 실행에 필요한 모든 것, 즉 코드, 런타임, 시스템 도구, 시스템 라이브러리 등 서버에 설치할 수 있는 모든 것을 포함하는 완전한 파일 시스템에 있는 소프트웨어 하나를 래핑한다. 이는 소프트웨어가 환경에 관계없이 항상 동일한 기능을 실행할 것을 보장한다.</description>
    </item>
    
  </channel>
</rss>