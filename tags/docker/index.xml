<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 人生は儚く短い。</title>
    <link>https://ziwon.github.io/tags/docker/</link>
    <description>Recent content in Docker on 人生は儚く短い。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://github.com/ziwon&#34;&gt;Philbert Yoon&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 16 Jan 2019 08:23:00 +0900</lastBuildDate>
    
	<atom:link href="https://ziwon.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[번역] 확장성 있고, 이식성 있는 도커 컨테이너 네트워크 설계</title>
      <link>https://ziwon.github.io/post/designing-scalable-portable-docker-container-networks/</link>
      <pubDate>Wed, 16 Jan 2019 08:23:00 +0900</pubDate>
      
      <guid>https://ziwon.github.io/post/designing-scalable-portable-docker-container-networks/</guid>
      <description>원문: Docker Reference Architecture: Designing Scalable, Portable Docker Container Networks (오역 및 오타는 댓글로 알려주세요)
※ 컨테이너가 아닌 Pod간의 Kubernetes 네트워킹 모델은 도커 네트워킹 모델과 좀 다릅니다. 자세한 내용은 하단의 기타 아티클을 참조하세요.
 배우게 될 것 도커 컨테이너는 실행에 필요한 모든 것, 즉 코드, 런타임, 시스템 도구, 시스템 라이브러리 등 서버에 설치할 수 있는 모든 것을 포함하는 완전한 파일 시스템에 있는 소프트웨어 하나를 래핑한다. 이는 소프트웨어가 환경에 관계없이 항상 동일한 기능을 실행할 것을 보장한다.</description>
    </item>
    
  </channel>
</rss>