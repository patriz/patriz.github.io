<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on 人生は儚く短い。</title>
    <link>https://ziwon.github.io/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on 人生は儚く短い。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://github.com/ziwon&#34;&gt;Philbert Yoon&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 19 Jan 2019 08:12:00 +0900</lastBuildDate>
    
	<atom:link href="https://ziwon.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TGI Kubernetes 002: Networking and Services</title>
      <link>https://ziwon.github.io/post/tgik-002/</link>
      <pubDate>Sat, 19 Jan 2019 08:12:00 +0900</pubDate>
      
      <guid>https://ziwon.github.io/post/tgik-002/</guid>
      <description>TGIK: Thanks God It&amp;rsquo;s Kubernetes 두 번째 에피소드는 네트워킹과 서비스에 관해 다룬다. 관련 링크나 노트는 없다.
결국, heptio-quickstart를 AWS에 올리고 따라해보았다. GCP UI나 커맨드라인 결과가 조금 다른 것으로 인해 혼란의 여지가 있을 것 같다. CloudFormation 기반으로 Kubernetes 컴포넌트들을 하나씩 설치해가는 내용도 충분히 살펴볼만하다.
•••
Networking 먼저, 10개의 kuard Pod를 띄운다.
kubectl run --replicas=10 --image=gcr.io/kuar-demo/kuard-amd64:1 kuard deployment.apps &amp;#34;kuard&amp;#34; created $ kubectl get pods NAME READY STATUS RESTARTS AGE kuard-dbdd7955d-4kdbr 1/1 Running 0 13s kuard-dbdd7955d-5r757 1/1 Running 0 13s kuard-dbdd7955d-dhts5 1/1 Running 0 13s kuard-dbdd7955d-hsl87 1/1 Running 0 13s kuard-dbdd7955d-k8x7l 1/1 Running 0 13s kuard-dbdd7955d-ms8hb 1/1 Running 0 13s kuard-dbdd7955d-qfjbk 1/1 Running 0 13s kuard-dbdd7955d-tfgdl 1/1 Running 0 13s kuard-dbdd7955d-v8lj2 1/1 Running 0 13s kuard-dbdd7955d-wzcf4 1/1 Running 0 13s port-forward으로 실행 중인 kuard에 접속해본다.</description>
    </item>
    
    <item>
      <title>TGI Kubernetes:001 A Quick Tour</title>
      <link>https://ziwon.github.io/post/tgik-001/</link>
      <pubDate>Sun, 13 Jan 2019 17:12:00 +0000</pubDate>
      
      <guid>https://ziwon.github.io/post/tgik-001/</guid>
      <description>TGIK: Thanks God It&amp;rsquo;s Kubernetes 유튜브를 검색하다, 지난 2017년부터 Kubernetes라는 주제로 Heptio에서 매주 금요일마다 라이브 스트리밍을 하고 있다는 것을 알게 되었다. 아무래도 제한적인 실무 경험이나 개인적인 스터디만으로는 한계가 있기 때문에, 하나씩 팔로우업 해보고자 한다.
 TGIK 깃헙 리포지토리 TGIK 유트브 공식채널 TGIK 전체 목록, recollir&amp;rsquo;s Playlist  A Quick Tour 첫 번째 에피소드의 내용은 다음 링크를 참고한다.
 https://github.com/heptio/tgik/tree/master/episodes/001  내용은 kubeadm을 기반으로 AWS에 Kubernetes 클러스터를 구동해보는 것이다. 이 내용은 APN(AWS Partner Network)의 기술 파트너인 Heptio가 AWS에 작성한 쿠버네티스 가이드 문서인 Quick Start for Kubernetes by Heptio에 소개되어 있다.</description>
    </item>
    
    <item>
      <title>Kops에서 Bastion 호스트 SSH로 접속하기</title>
      <link>https://ziwon.github.io/post/bastion-in-kops/</link>
      <pubDate>Wed, 02 Jan 2019 12:12:00 +0000</pubDate>
      
      <guid>https://ziwon.github.io/post/bastion-in-kops/</guid>
      <description>네트워크에서 바스티온 호스트(Bastion Host)는 침입차단 소프트웨어가 설치되어 내부와 외부 네트워크 사이에서 일종의 게이트 역할을 수행하는 호스트로 네트워크 보안에 가장 중요한 방화벽 호스트로써 방화벽의 메인서버를 의미하기도 한다.1
AWS 컨텍스트에서는 바스티온 호스트를 내부 네트워크에 접속할 수 있는 서버로 정의하는데 2, Kops에서는 바스티온 호스트를 프로비저닝하고 3, 이를 통해 프라이빗 네트워크 인스턴스에 접속한다. (AWS 바스티온 구조 4)
이를 테면, 다음과 같이 쿠버네티스 마스터 노드와 워커 노드가 구성되어 있다고 하자. 이들 인스턴스들은 내부 네트워크에 존재하므로 바스티온 호스트를 통해 접속해야 한다.</description>
    </item>
    
  </channel>
</rss>